# frozen_string_literal: true

module ProductVersions
  ##
  # === Get Product versions.
  # Get a collection of product versions.
  #
  # ==== Parameters
  # options:: (Hash) -- List of {Resource collection Options}[#class-Mints::Pub-label-Resource+collections+options+] shown above can be used as parameter.
  # use_post:: (Boolean) -- Variable to determine if the request is by 'post' or 'get' functions.
  #
  # ==== First Example
  #     @data = @mints_user.get_product_versions
  #
  # ==== Second Example
  #     options = { fields: "title" }
  #     @data = @mints_user.get_product_versions(options)
  #
  # ==== Third Example
  #     options = { fields: "title" }
  #     @data = @mints_user.get_product_versions(options, false)
  def get_product_versions(options = nil, use_post = true)
    get_query_results('/ecommerce/product-versions', options, use_post)
  end

  ##
  # === Get Product version.
  # Get a single product version.
  #
  # ==== Parameters
  # slug:: (String) -- It's the string identifier generated by Mints.
  # options:: (Hash) -- List of {Single Resource Options}[#class-Mints::Pub-label-Single+resource+options] shown above can be used as parameter.
  #
  # ==== First Example
  #     @data = @mints_user.get_product_version("product_slug")
  #
  # ==== Second Example
  #     options = {
  #       fields: 'id, slug'
  #     }
  #     @data = @mints_user.get_product_version("lego-set", options)
  def get_product_version(slug, options = nil)
    @client.raw('get', "/ecommerce/product-versions/#{slug}", options)
  end

  # === Create product version.
  # Create a product version with data.
  #
  # ==== Parameters
  # data:: (Hash) -- Data to be submitted.
  #
  # ==== Example
  #     data = {
  #       title: 'New Product Version',
  #       slug: 'new-product-version',
  #       product_id: 1
  #     }
  #     @data = @mints_user.create_product_version(data)
  def create_product_version(data, options = nil)
    @client.raw('post', '/ecommerce/product-versions', options, data_transform(data))
  end

  # === Update product version.
  # Update a product version info.
  #
  # ==== Parameters
  # id:: (Integer) -- Product version id.
  # data:: (Hash) -- Data to be submitted.
  #
  # ==== Example
  #     data = {
  #       title: 'New Product Version Modified',
  #       slug: 'new-product-version',
  #       product_id: 1
  #     }
  #     @data = @mints_user.update_product_version(9, data)
  def update_product_version(id, data, options = nil)
    @client.raw('put', "/ecommerce/product-versions/#{id}", options, data_transform(data))
  end

  # === Delete product version.
  # Delete a product version.
  #
  # ==== Parameters
  # id:: (Integer) -- Product version id.
  #
  def delete_product_version(id)
    @client.raw('delete', "/ecommerce/product-versions/#{id}")
  end

  # === Publish product version.
  # Publish a product version.
  #
  # ==== Parameters
  # id:: (Integer) -- Product version id.
  # data:: (Hash) -- Data to be submitted.
  #
  # ==== Example
  #     data = {
  #       title: 'New Publish'
  #     }
  #     @data = @mints_user.publish_product_version(2, data)
  def publish_product_version(id, data)
    @client.raw('put', "/ecommerce/product-versions/#{id}/publish", nil, data_transform(data))
  end

end
